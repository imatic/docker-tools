#!/usr/bin/env bash

set -eu

REGISTRY=${REGISTRY:-'registry.test:5000'}
REGISTRY_PROTOCOL=${REGISTRY_PROTOCOL:-'https'}

PRESERVE_N_TAGS=${PRESERVE_N_TAGS:-5}
PRESERVE_SINCE="${PRESERVE_SINCE:-$(date --date '2 months ago' +%s)}"

repositories=()
original_ifs="${IFS}"

function set_repositories {
    local repositories_string=$(docker-registry-request "${REGISTRY_PROTOCOL}://${REGISTRY}/v2/_catalog" | jq --raw-output '.repositories[]')
    local IFS=$'\n'
    repositories=(${repositories_string})
}

function remove_old_tags {
    for repository in "${repositories[@]}"; do
        local tags_string=$(docker-registry-request "${REGISTRY_PROTOCOL}://${REGISTRY}/v2/${repository}/tags/list" | jq --raw-output '.tags[]')
        local IFS=$'\n'
        local tags=(${tags_string})
        IFS="${original_ifs}"
        if [[ ${#tags[@]} -gt 0 ]]; then
            declare -A time_tag=()
            for tag in "${tags[@]}"; do
                local tag_created_at="$(docker-registry-request "${REGISTRY_PROTOCOL}://${REGISTRY}/v2/${repository}/manifests/${tag}" | jq --raw-output '[.history[]]|map(.v1Compatibility|fromjson.created)|sort|reverse|.[0]')"
                local time_created_at="$(date --date "${tag_created_at}" +%s)"
                time_tag["${time_created_at}"]="${tag}"
            done

            IFS=$'\n'
            local sorted_times=($(sort --numeric-sort --reverse <<<"${!time_tag[*]}"))
            IFS="${original_ifs}"
            local times_to_remove=(${sorted_times[@]:${PRESERVE_N_TAGS}})
            if [[ "${#times_to_remove[@]}" -gt 0 ]]; then
                for time_to_remove in "${times_to_remove[@]}"; do
                    if [[ "${time_to_remove}" -lt "${PRESERVE_SINCE}" ]]; then
                        printf "Removing tag \"${time_tag[${time_to_remove}]}\" from repository \"${repository}\".\n"
                        digest="$(OBTAIN_DIGEST=true REQUEST_METHOD='HEAD' docker-registry-request "${REGISTRY_PROTOCOL}://${REGISTRY}/v2/${repository}/manifests/${time_tag[${time_to_remove}]}" | grep --perl-regexp --only-matching --ignore-case '(?<=Docker-Content-Digest: )[^\r\n]*')"
                        REQUEST_METHOD='DELETE' docker-registry-request "${REGISTRY_PROTOCOL}://${REGISTRY}/v2/${repository}/manifests/${digest}"
                    fi
                done
            fi
       fi
    done
}

printf "Removing dead and exited containers with their volumes...\n"
docker ps --filter status=dead --filter status=exited --all --quiet | xargs --no-run-if-empty docker rm --volumes

printf "Removing untagged images...\n"
docker images --no-trunc | grep '<none>' | awk '{ print $3 }' | xargs --no-run-if-empty docker rmi

printf "Removing dangling volumes...\n"
docker volume ls --quiet --filter dangling=true | xargs --no-run-if-empty docker volume rm

printf "Removing old images...\n"
set_repositories
remove_old_tags

