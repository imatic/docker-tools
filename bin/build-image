#!/usr/bin/env bash
#
# Builds docker source images from git repo

set -eu

### Env variables expected to be overwritten
# name of the result image
NAME=${NAME:-'test-app'}
# registry to push result image into
REGISTRY=${REGISTRY:-'registry.test:5000'}
REGISTRY_PROTOCOL=${REGISTRY_PROTOCOL:-'https'}
# user to authenticate agains registry
REGISTRY_USER=${REGISTRY_USER:-'admin'}
REGISTRY_PW=${REGISTRY_PW:-'badmin'}

tags=()
original_ifs="${IFS}"

function append_git_tags {
    local IFS=$'\n'
    tags+=($(git tag --list --points-at HEAD))
}

function append_commit_tag {
    if git log --format=%B --max-count 1 | grep 'build image'; then
        local commit=$(git log --format=%H)
        tags+=(${commit:0:7})
    fi
}

append_git_tags
append_commit_tag

if [[ ${#tags[@]} -eq 0 ]]; then
    printf "No tags found. Canceling image build...\n"
    exit 0
fi

# Removes tags which already exists in registry
if FAIL_ON_ERROR=true docker-registry-request "${REGISTRY_PROTOCOL}://${REGISTRY}/v2/${NAME}/tags/list"; then
    condition=''
    tags_json_string='['
    for tag in "${tags[@]}"; do
        condition+=". == \"${tag}\" or"
        tags_json_string+="\"${tag}\"",
    done
    condition="${condition%' or'}"
    tags_json_string="${tags_json_string%','}]"

    tags_string=$(docker-registry-request "${REGISTRY_PROTOCOL}://${REGISTRY}/v2/${NAME}/tags/list" | jq --raw-output "${tags_json_string} - [.tags[] | select(${condition})] | .[]")
    IFS=$'\n'
    tags=(${tags_string})
    IFS="${original_ifs}"
    if [[ ${#tags[@]} -eq 0 ]]; then
        printf "All tags already exists. Cancelling image build...\n"
        exit 0
    fi
fi

printf "Found tags: ${tags[*]}. Building image...\n"

tag_args=()
for tag in "${tags[@]}"; do
    tag_args+=("--tag" "${REGISTRY}/${NAME}:${tag}")
done

docker build . "${tag_args[@]}"
docker login --username "${REGISTRY_USER}" --password "${REGISTRY_PW}" "${REGISTRY}"
for tag in "${tags[@]}"; do
    docker push "${REGISTRY}/${NAME}:${tag}"
done

